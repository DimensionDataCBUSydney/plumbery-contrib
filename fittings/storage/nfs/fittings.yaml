---

information:
  - "NFS server and client over IPv6 back-end network"

parameters:

  primaryId:
    information:
      - "the primary data centre for this deployment"
    type: locations.list
    default: AU10

  secondaryId:
    information:
      - "the secondary data centre for this deployment"
    type: locations.list
    default: AU11

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: NfsFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: NfsNetwork

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/storage/nfs

defaults:

  cloud-config:

    ssh_keys:
      rsa_private: |
        {{ key.rsa_private }}
      rsa_public: "{{ key.rsa_public }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ key.rsa_public }}"
          - "{{ local.rsa_public }}"

    disable_root: true
    ssh_pwauth: false

---

locationId: "{{ primaryId.parameter }}"

blueprints:

  - nfs:

      domain:
        name: "{{ domainName.parameter }}"
        description: "NFS - server side"
        ipv4: 2

      ethernet:
        name: "{{ networkName.parameter }}"
        subnet: 192.168.20.0
        accept:
          - "{{ secondaryId.parameter }}::{{ networkName.parameter }}"

      nodes:

        - nfsServer:

            description: "#nfs #ubuntu"

            information:
              - "NFS server"
              - "ssh root@{{ nfsServer.public }}"
              - "check service with: showmount -e nfsServer"

            appliance: 'Ubuntu 14'
            cpu: 2
            memory: 8

            disks:
              - 1 100 standard

            monitoring: essentials

            glue:
              - internet 22

            cloud-config:

              packages:
                - ntp
                - nfs-kernel-server

              write_files:

                - path: /etc/exports
                  content: |
                        /var/nfs    *(rw,sync,no_subtree_check)

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ nfsServer.ipv6 }}/ {next}
                    /^{{ {{ secondaryId.parameter }}::nfsClient.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ nfsServer.ipv6 }}    nfsServer"
                     print "{{ {{ secondaryId.parameter }}::nfsClient.ipv6 }}    nfsClient"
                    }

              runcmd:

                - echo "===== Growing LVM with added disk"
                - pvcreate /dev/sdb
                - vgextend rootvol00 /dev/sdb
                - lvextend -l +100%FREE /dev/mapper/rootvol00-rootlvol00
                - resize2fs /dev/mapper/rootvol00-rootlvol00

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Installing NFS"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts
                - mkdir /var/nfs
                - chown nobody:nogroup /var/nfs
                - exportfs -a
                - service nfs-kernel-server start

---

locationId: "{{ secondaryId.parameter }}"

blueprints:

  - nfs:

      domain:
        name: "{{ domainName.parameter }}"
        description: "NFS - client side"
        ipv4: 2

      ethernet:
        name: "{{ networkName.parameter }}"
        subnet: 192.168.20.0
        accept:
          - "{{ primaryId.parameter }}::{{ networkName.parameter }}"

      nodes:
        - nfsClient:

            description: "#nfs #ubuntu"

            information:
              - "NFS client, with automatic mount to the server"
              - "ssh root@{{ nfsClient.public }}"
              - "check connectivity to server with: showmount -e nfsServer"
              - "check actual service with: mount -t nfs"

            appliance: 'Ubuntu 14'

            monitoring: essentials

            glue:
              - internet 22

            cloud-config:

              packages:
                - ntp
                - nfs-common

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ {{ primaryId.parameter }}::nfsServer.ipv6 }}/ {next}
                    /^{{ nfsClient.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ {{ primaryId.parameter }}::nfsServer.ipv6 }}    nfsServer"
                     print "{{ nfsClient.ipv6 }}    nfsClient"
                    }

                - path: /root/fstab.awk
                  content: |
                    #!/usr/bin/awk -f
                    !/nfsServer/
                    END {
                     print "nfsServer:/var/nfs    /shared-nfs   nfs auto,noatime,nolock,bg,nfsvers=4,intr,actimeo=1800 0 0"
                    }

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Installing NFS"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts
                - mkdir -p /shared-nfs
                - cp -n /etc/fstab /etc/fstab.original
                - awk -f /root/fstab.awk /etc/fstab >/etc/fstab.new && mv /etc/fstab.new /etc/fstab
                - mount -a
                - df -h
                - echo "hello world written by nfsClient" >/shared-nfs/hello.txt

