---

information:
  - "EMC Elastic Cloud Storage, for development"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: EU7

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: EcsFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: EcsNetwork

  cpuPerNode:
    information:
      - "the quantity of CPU given to one ECS node"
    type: [4..32]
    default: 8

  memoryPerNode:
    information:
      - "the quantity of RAM given to one ECS node, in GB"
    type: [8..256]
    default: 32

  diskPerNode:
    information:
      - "the quantity of storage given to one ECS node, in GB"
    type: [100..1000]
    default: 500

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/storage/ecs
  credit: https://github.com/EMCECS/ECS-CommunityEdition/blob/master/Documentation/ECS-MultiNode-Instructions.md

defaults:

  domain:
    name: "{{ parameter.domainName }}"
    ipv4: auto

  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: 10.0.1.0

  ecs-node:

    appliance: 'CentOS 7'

    cpu: "{{ parameter.cpuPerNode }}"
    memory: "{{ parameter.memoryPerNode }}"

    disks:
      - "1 {{ parameter.diskPerNode }} economy"

    monitoring: essentials

  cloud-config:

    hostname: "{{ node.name }}"

    packages:
      - ntp
      - wget
      - git
      - tar

    write_files:

      - path: /root/hosts.awk
        content: |
          #!/usr/bin/awk -f
          /^{{ node1.private }}/ {next}
          /^{{ node2.private }}/ {next}
          /^{{ node3.private }}/ {next}
          /^{{ node4.private }}/ {next}
          {print}
          END {
           print "{{ node1.private }}    node1"
           print "{{ node2.private }}    node2"
           print "{{ node3.private }}    node3"
           print "{{ node4.private }}    node4"
          }

      # use docker repo
      - path: /etc/yum.repos.d/docker.repo
        content: |
          [dockerrepo]
          name=Docker Repository
          baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
          enabled=1
          gpgcheck=1
          gpgkey=https://yum.dockerproject.org/gpg

    runcmd:

      - echo "===== Handling centos identity"
      - cp -n /etc/ssh/ssh_host_rsa_key /home/centos/.ssh/id_rsa
      - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/centos/.ssh/id_rsa.pub
      - chown centos:centos /home/centos/.ssh/*

      - echo "===== Updating /etc/hosts"
      - cp -n /etc/hosts /etc/hosts.original
      - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

      - echo "===== Allowing traffic among components"
      - setenforce 0
      - systemctl stop firewalld
      - systemctl disable firewalld

      - echo "===== Installing ECS and formatting disk"
      - cd /home/centos
      - git clone https://github.com/EMCECS/ECS-CommunityEdition.git
      - cd ECS-CommunityEdition/ecs-multi-node/
      - "python step1_ecs_multinode_install.py --ips {{ node1.private }} {{ node2.private }} {{ node3.private }} {{ node4.private }}  --hostnames node1 node2 node3 node4 --ethadapter ens32 --disks sdb"

    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: centos
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: true
    ssh_pwauth: true

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - ecs:

      nodes:

        - node1:
            default: ecs-node

            information:
              - "this is a ECS node from EMC, for development only"
              - "get secret keys with following commands:"
              - "ssh centos@{{ node.public }}"
              - "cat /var/log/cloud-init-output.log"

            glue:
              - internet 22 443 9020 9024 4443 9011 9101

            cloud-config:

              runcmd:

                - echo "===== Waiting for cluster to converge"
                - sleep 7m

                - echo "===== Configuring ECS object store"
                - cd /home/centos/ECS-CommunityEdition/ecs-multi-node/
                - "python step2_object_provisioning.py --ECSNodes={{ node1.private }},{{ node2.private }},{{ node3.private }},{{ node4.private }} --Namespace=ns1 --ObjectVArray=ova1 --ObjectVPool=ovp1 --UserName=emccode --DataStoreName=ds1 --VDCName=vdc1 --MethodName="

        - node[2..4]:
            default: ecs-node

            glue:
              - internet 22
