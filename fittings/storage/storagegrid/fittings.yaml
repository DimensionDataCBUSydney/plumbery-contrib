---

information:
  - "NetApp StorageGRID cluster"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: EU8

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: StoragegridFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: StoragegridNetwork

  cpuPerNode:
    information:
      - "the quantity of CPU given to one StorageGRID node"
    type: [4..32]
    default: 8

  memoryPerNode:
    information:
      - "the quantity of RAM given to one StorageGRID node, in GB"
    type: [8..256]
    default: 16

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/storage/storagegrid

defaults:

  domain:
    name: "{{ parameter.domainName }}"
    ipv4: auto

  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: 10.0.3.0

  storagegrid-node:

    appliance: 'SuSE'

    monitoring: essentials

#  cloud-config:
#
#    hostname: "{{ node.name }}"
#
#    packages:
#      - ntp
#      - wget
#      - git
#      - tar
#
#    write_files:
#
#      - path: /root/hosts.awk
#        content: |
#          #!/usr/bin/awk -f
#          /^{{ installer-node.private }}/ {next}
#          /^{{ DDSG-ADM1.private }}/ {next}
#          /^{{ DDSG-S1.private }}/ {next}
#          /^{{ DDSG-S2.private }}/ {next}
#          /^{{ DDSG-S3.private }}/ {next}
#          /^{{ DDSG-S4.private }}/ {next}
#          /^{{ DDSG-G1.private }}/ {next}
#          {print}
#          END {
#           print "{{ installer-node.private }}    installer-node"
#           print "{{ DDSG-ADM1.private }}    DDSG-ADM1"
#           print "{{ DDSG-S1.private }}    DDSG-S1"
#           print "{{ DDSG-S2.private }}    DDSG-S2"
#           print "{{ DDSG-S3.private }}    DDSG-S3"
#           print "{{ DDSG-S4.private }}    DDSG-S4"
#           print "{{ DDSG-G1.private }}    DDSG-G1"
#          }
#
#    runcmd:
#
#      - echo "===== Handling root identity"
#      - cp -n /etc/ssh/ssh_host_rsa_key /root/.ssh/id_rsa
#      - cp -n /etc/ssh/ssh_host_rsa_key.pub /root/.ssh/id_rsa.pub
#      - chown root:root /root/.ssh/*
#
#      - echo "===== Updating /etc/hosts"
#      - cp -n /etc/hosts /etc/hosts.original
#      - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts
#
#    ssh_keys:
#      rsa_private: |
#        {{ rsa_private.key }}
#      rsa_public: "{{ rsa_public.key }}"
#
#    users:
#      - default
#
#      - name: root
#        sudo: 'ALL=(ALL) NOPASSWD:ALL'
#        ssh-authorized-keys:
#          - "{{ rsa_public.key }}"
#          - "{{ rsa_public.local }}"
#
#    disable_root: false
#    ssh_pwauth: true

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - storagegrid:

      nodes:

        - installer-node:
            default: storagegrid-node

            appliance: 'UB-StorageGRID-Base'

            information:
              - "this is a StorageGRID installer node from NetApp"
              - "ssh root@{{ node.public }}"

            cpu: 4
            memory: 8

            disks:
              - 1 100 standard

            glue:
              - internet icmp 22 80
              - primary .10

        - DDSG-ADM1:
            default: storagegrid-node

            information:
              - "this is a StorageGRID administration node from NetApp"
              - "ssh root@{{ node.public }}"

            cpu: 4
            memory: 8

            disks:
              - 1 400 standard

            glue:
              - internet icmp 22 80 443
              - primary .11

        - DDSG-S1:
            default: storagegrid-node

            cpu: "{{ parameter.cpuPerNode }}"
            memory: "{{ parameter.memoryPerNode }}"

            disks:
              - 0 100 standard
              - 1 300 standard
              - 2 50 standard
              - 3 50 standard

            glue:
              - primary .12
              - internet icmp 22 18080 18082

        - DDSG-S2:
            default: storagegrid-node

            cpu: "{{ parameter.cpuPerNode }}"
            memory: "{{ parameter.memoryPerNode }}"

            disks:
              - 0 100 standard
              - 1 300 standard
              - 2 50 standard
              - 3 50 standard

            glue:
              - primary .13
              - internet icmp 22 18080 18082

        - DDSG-S3:
            default: storagegrid-node

            cpu: "{{ parameter.cpuPerNode }}"
            memory: "{{ parameter.memoryPerNode }}"

            disks:
              - 0 100 standard
              - 1 300 standard
              - 2 50 standard
              - 3 50 standard

            glue:
              - primary .14
              - internet icmp 22 18080 18082

        - DDSG-S4:
            default: storagegrid-node

            cpu: "{{ parameter.cpuPerNode }}"
            memory: "{{ parameter.memoryPerNode }}"

            disks:
              - 0 100 standard
              - 1 300 standard
              - 2 50 standard
              - 3 50 standard

            glue:
              - primary .15
              - internet icmp 22 18080 18082

        - DDSG-G1:
            default: storagegrid-node

            information:
              - "this is a StorageGRID gateway node from NetApp"
              - "ssh root@{{ node.public }}"

            cpu: 4
            memory: 8

            disks:
              - 1 100 standard

            glue:
              - primary .16
              - internet icmp 22 1507 8080 8082

  - suse-only:

      nodes:

        - suse-node:
            default: storagegrid-node

            information:
              - "this is a SuSE node"
              - "ssh root@{{ node.public }}"

            cpu: 4
            memory: 8

            disks:
              - 1 100 standard

            glue:
              - primary .21
              - internet icmp 22

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - wget
                - git
                - tar

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ installer-node.private }}/ {next}
                    /^{{ DDSG-ADM1.private }}/ {next}
                    /^{{ DDSG-S1.private }}/ {next}
                    /^{{ DDSG-S2.private }}/ {next}
                    /^{{ DDSG-S3.private }}/ {next}
                    /^{{ DDSG-S4.private }}/ {next}
                    /^{{ DDSG-G1.private }}/ {next}
                    {print}
                    END {
                     print "{{ installer-node.private }}    installer-node"
                     print "{{ DDSG-ADM1.private }}    DDSG-ADM1"
                     print "{{ DDSG-S1.private }}    DDSG-S1"
                     print "{{ DDSG-S2.private }}    DDSG-S2"
                     print "{{ DDSG-S3.private }}    DDSG-S3"
                     print "{{ DDSG-S4.private }}    DDSG-S4"
                     print "{{ DDSG-G1.private }}    DDSG-G1"
                    }

              runcmd:

                - echo "===== Handling root identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /root/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /root/.ssh/id_rsa.pub
                - chown root:root /root/.ssh/*

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

              ssh_keys:
                rsa_private: |
                  {{ rsa_private.key }}
                rsa_public: "{{ rsa_public.key }}"

              users:
                - default

                - name: root
                  sudo: 'ALL=(ALL) NOPASSWD:ALL'
                  ssh-authorized-keys:
                    - "{{ rsa_public.key }}"
                    - "{{ rsa_public.local }}"

              disable_root: false
              ssh_pwauth: true
